<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jezh</groupId>
    <artifactId>hibernate-tutorial</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>hibernate-tutorial Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <!--<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->

        <junit.version>4.12</junit.version>
        <!--<payara.version>RELEASE</payara.version>-->
        <java.version>1.8</java.version>
        <spring.version>4.3.9.RELEASE</spring.version>
        <logging.version>1.2</logging.version>
        <javax.version>7.0</javax.version>
        <javax.servlet.jstl.version>1.2</javax.servlet.jstl.version>
        <javax.validation.version>2.0.0.Final</javax.validation.version>
        <hibernate.validator.version>5.4.2.Final</hibernate.validator.version>
        <hibernate.version>5.2.0.Final</hibernate.version>
        <!--<hibernate.version>5.2.10.Final</hibernate.version>-->
        <mysql.connector.version>5.1.9</mysql.connector.version>
        <!--<mysql.connector.version>6.0.6</mysql.connector.version>-->
        <!--<mysql.connector.version>5.0.8</mysql.connector.version>-->
        <postgresql.version>9.1-901-1.jdbc4</postgresql.version>
        <org.postgresql.version>42.1.1</org.postgresql.version>
        <h2.version>1.4.196</h2.version>
        <commons-lang3.version>3.7</commons-lang3.version>
        <maven.compiler.plugin.version>3.6.1</maven.compiler.plugin.version>
        <tomcat7.maven.plugin.version>2.2</tomcat7.maven.plugin.version>
        <!--<jersey.version>1.19.1</jersey.version>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.8.2</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.8.2</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/log4j/log4j -->
        <!--<dependency>-->
            <!--<groupId>log4j</groupId>-->
            <!--<artifactId>log4j</artifactId>-->
            <!--<version>1.2.17</version>-->
        <!--</dependency>-->


        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${logging.version}</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <!--todo: если нет следующей строчки, будет ошибка запуска Tomcat: "...A child container failed during start"-->
            <scope>provided</scope>
            <version>${javax.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${javax.servlet.jstl.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>
        <!--for some useful annotations, eg @Contract("null -> null") etc-->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>15.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!--FULL HIBERNATE DEPENDENCIES-->
        <!--(or see https://stackoverflow.com/questions/33720355/maven-how-to-add-all-required-dependencies-for-hibernate)-->
        <!--<dependency>-->
            <!--<groupId>org.hibernate</groupId>-->
            <!--<artifactId>hibernate</artifactId>-->
            <!--<version>3.1.3</version>-->
        <!--</dependency>-->

        <!--in java 9 JAXB APIs are considered to be Java EE APIs, and therefore are no longer contained on the
        default class path. The quik solution (do not work in java 8 and lower): execute in command line:
         - -add-modules java.xml.bind (without space) or - -add-modules java.se.ee
         https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j/43574427#43574427
         Proper long-term solution:-->
        <!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
        <!-- https://mvnrepository.com/artifact/javax.xml/jaxb-api -->
        <!--<dependency>-->
            <!--<groupId>javax.xml.bind</groupId>-->
            <!--<artifactId>jaxb-api</artifactId>-->
            <!--<version>2.3.0</version>-->
        <!--</dependency>-->
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${org.postgresql.version}</version>
        </dependency>

        <!--TO CREATE CONNECTION POOL:-->
        <!-- https://mvnrepository.com/artifact/com.mchange/c3p0 -->
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.5.2</version>
        </dependency>
        <!--TO CREATE CONNECTION POOL:-->
        <!-- https://mvnrepository.com/artifact/com.cloudhopper.proxool/proxool -->
        <dependency>
            <groupId>com.cloudhopper.proxool</groupId>
            <artifactId>proxool</artifactId>
            <version>0.9.1</version>
        </dependency>
        <!--TO CREATE CONNECTION POOL:-->
        <!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>

        <!--TO USE EqualsBuilder etc.-->
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>


    </dependencies>
    <build>
        <finalName>hibernate-tutorial</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat7.maven.plugin.version}</version>
                <configuration>
                    <port>8084</port>
                    <path>/hb</path>
                </configuration>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-surefire-plugin</artifactId>-->
                <!--<version>2.20.1</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash;<argLine>&#45;&#45;add-modules java.se.ee</argLine>&ndash;&gt;-->
                    <!--<argLine>&#45;&#45;add-modules java.xml.bind</argLine>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>
